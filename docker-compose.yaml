version: '3.1'
services:
  demo-gateway:
    build:
      context: affiliate/
      dockerfile: envoy.dockerfile
      args:
        - service=gateway
        - BOT_USER
        - BOT_PRIVATE_TOKEN
        - CI_PROJECT_NAMESPACE
    restart: "no"
    container_name: demo-gateway
    ports:
      - "18080:18080"
      - "80:8080"
    command:
        - /app/scripts/docker-entrypoint.sh
    environment:
      - DOGSTATSD_HOST_IP=0.0.0.0
      - ENVOY_UID=0
    logging:
      options:
        max-file: "2"
        max-size: 10m
    networks:
      - demo-network

  demo-db:
    image: mysql:latest
    container_name: demo-db
    env_file:
      - ./.env
    ports:
      - 3306:3306
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - demo-network

  demo-auth:
    build:
      context: ./
      dockerfile: auth/build/Dockerfile
    env_file:
      - ./.env
    depends_on:
      - demo-db
    ports:
      - 8081:8080
    command: bash -c "./wait-for-it.sh $${DB_HOST}:$${DB_PORT} && ./app/server -c /app/config.yaml"
    restart: on-failure
    networks:
      - demo-network

  demo-wallet:
    build:
      context: ./
      dockerfile: wallet/build/Dockerfile
    env_file:
      - ./.env
    depends_on:
      - demo-db
    ports:
      - 8082:8080
    command: bash -c "./wait-for-it.sh $${DB_HOST}:$${DB_PORT} && ./app/server -c /app/config.yaml"
    restart: on-failure
    networks:
      - demo-network

  demo-web:
    build:
      context: ./web
      dockerfile: build/Dockerfile
    ports:
      - 8083:8080
    restart: on-failure
    networks:
      - demo-network

volumes:
  db-volume:

networks:
  demo-network:
    driver: bridge