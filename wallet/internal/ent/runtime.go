// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/nautilusgames/demo/wallet/internal/ent/player"
	"github.com/nautilusgames/demo/wallet/internal/ent/session"
	"github.com/nautilusgames/demo/wallet/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	playerMixin := schema.Player{}.Mixin()
	playerMixinFields0 := playerMixin[0].Fields()
	_ = playerMixinFields0
	playerFields := schema.Player{}.Fields()
	_ = playerFields
	// playerDescCreatedAt is the schema descriptor for created_at field.
	playerDescCreatedAt := playerMixinFields0[1].Descriptor()
	// player.DefaultCreatedAt holds the default value on creation for the created_at field.
	player.DefaultCreatedAt = playerDescCreatedAt.Default.(func() time.Time)
	// playerDescUpdatedAt is the schema descriptor for updated_at field.
	playerDescUpdatedAt := playerMixinFields0[2].Descriptor()
	// player.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	player.DefaultUpdatedAt = playerDescUpdatedAt.Default.(func() time.Time)
	// player.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	player.UpdateDefaultUpdatedAt = playerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// playerDescBalance is the schema descriptor for balance field.
	playerDescBalance := playerFields[1].Descriptor()
	// player.DefaultBalance holds the default value on creation for the balance field.
	player.DefaultBalance = playerDescBalance.Default.(int64)
	// player.BalanceValidator is a validator for the "balance" field. It is called by the builders before save.
	player.BalanceValidator = playerDescBalance.Validators[0].(func(int64) error)
	sessionMixin := schema.Session{}.Mixin()
	sessionMixinFields0 := sessionMixin[0].Fields()
	_ = sessionMixinFields0
	sessionFields := schema.Session{}.Fields()
	_ = sessionFields
	// sessionDescCreatedAt is the schema descriptor for created_at field.
	sessionDescCreatedAt := sessionMixinFields0[1].Descriptor()
	// session.DefaultCreatedAt holds the default value on creation for the created_at field.
	session.DefaultCreatedAt = sessionDescCreatedAt.Default.(func() time.Time)
	// sessionDescUpdatedAt is the schema descriptor for updated_at field.
	sessionDescUpdatedAt := sessionMixinFields0[2].Descriptor()
	// session.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	session.DefaultUpdatedAt = sessionDescUpdatedAt.Default.(func() time.Time)
	// session.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	session.UpdateDefaultUpdatedAt = sessionDescUpdatedAt.UpdateDefault.(func() time.Time)
}
